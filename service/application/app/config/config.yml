imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["en"] }
    translator:      { fallbacks: ["%locale%"] }
    #translator: ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    ##ide: 'phpstorm://open?file=%f&line=%l'

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        #metadata_cache_driver: apc

doctrine_mongodb:
    connections:
        default:
            server: "%mongodb_server%"
            options: {}
    default_database: user_service_%kernel.environment%
    document_managers:
        default:
            auto_mapping: true
            #metadata_cache_driver: apc

stof_doctrine_extensions:
    default_locale: en_US
    mongodb:
        default:
            timestampable: true
            tree: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

jms_serializer:
    handlers:
        datetime:
            default_format: "c" # ISO8601
            default_timezone: "UTC" # defaults to whatever timezone set in php.ini or via date_default_ti

# settings of the user service
user_service:
    api_settings:
        api_url: '/api/'
        api_format: json
    social_login:
        facebook:
            app_id:     108749902985918
            app_secret: 46ee1ff99d49bb0567751fe551198525
            sdk_version: 'v2.8'
        google:
            app_id:     108749902985918
            app_secret: 46ee1ff99d49bb0567751fe551198525

sensio_framework_extra:
    request:
        converters: true
        auto_convert: true

framework:
    templating:
        engines: ['twig']


## GeoIP package
maxmind_geoip:
  data_file_path: "%kernel.root_dir%/../data/GeoIPCity.dat"


#oneup_flysystem:
#    adapters:
#        my_adapter:
#            local:
#                directory: %kernel.root_dir%/cache
#    filesystems:
#        my_filesystem:
#            adapter: my_adapter


lexik_jwt_authentication:
    private_key_path: '%jwt_private_key_path%'
    public_key_path:  '%jwt_public_key_path%'
    pass_phrase:      '%jwt_key_pass_phrase%'
    token_ttl:        '%jwt_token_ttl%'
    user_identity_field: username

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ["%cors_allow_origin%"]
        allow_headers: []
        allow_methods: ["*"]
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
        forced_allow_origin_value: ~
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ["*"]
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE', 'OPTIONS']
            max_age: 3600

nelmio_api_doc:
    sandbox:
        request_format:
            formats:
                json: application/json
            method: accept_header
            default_format: json
        enabled:  true
        body_format:
            formats: [ form, json ]             # array of enabled body formats,
            default_format: form                # default is `form`, determines whether to send
    cache:
        enabled:              false
        file:                 '%kernel.cache_dir%/api-doc.cache'

jms_security_extra:
    secure_all_services: false
    enable_iddqd_attribute: false
    expressions: true
    voters:
        disable_authenticated: false
        disable_role:          false
        disable_acl:           false
    method_access_control: { }


old_sound_rabbit_mq:
    connections:
        default:
            host:     '%rabbitmq_host%' #'rabbitmq-management' ## in prod should be 'rabbitmq'
            port:     5672
            user:     '%rabbitmq_user%'
            password: '%rabbitmq_password%'
            vhost:    '/'
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3
            keepalive: true
            heartbeat: 6
            use_socket: true
    producers:
        user_account_change:
            connection:       default
            exchange_options: {name: 'user-account-exchange', type: direct}
    consumers:
        user_account_change:
            connection:       default
            exchange_options: {name: 'user-account-exchange', type: direct}
            queue_options:
                name: "user-account-exchange"
                arguments: {'x-ha-policy': ['S', 'all']}
            callback: user_service.amqb_consumer.user_account_change

aws:
    version: latest
    region: us-west-2
    credentials:
        key: "%aws_access_key%"
        secret: "%aws_access_secret%"
    Sqs:
        region: us-west-2
        version: '2012-11-05'
        debug: true
        credentials: "@aws.credentials_provider"





